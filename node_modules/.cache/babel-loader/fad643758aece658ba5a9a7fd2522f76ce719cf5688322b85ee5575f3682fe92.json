{"ast":null,"code":"var _jsxFileName = \"/Users/roy/Desktop/Zealthy/onboarding/src/Components/Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Admin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const navigate = useNavigate();\n  const [pageAssignments, setPageAssignments] = useState({\n    page1: ['AboutMe', 'Address'],\n    page2: ['BirthDate']\n  });\n  const components = ['AboutMe', 'Address', 'BirthDate'];\n  const pages = ['page1', 'page2'];\n  const handleAssignmentChange = (page, component, isChecked) => {\n    setPageAssignments(prev => {\n      const newAssignments = {\n        ...prev\n      };\n      if (isChecked) {\n        // Add component to page\n        newAssignments[page] = [...(newAssignments[page] || []), component];\n      } else {\n        // Remove component from page\n        newAssignments[page] = newAssignments[page].filter(c => c !== component);\n        // Ensure at least one component remains\n        if (newAssignments[page].length === 0) {\n          // Find first available component not already assigned to this page\n          const availableComponent = components.find(c => !newAssignments[page].includes(c));\n          if (availableComponent) {\n            newAssignments[page].push(availableComponent);\n          }\n        }\n      }\n      return newAssignments;\n    });\n  };\n  const handleSave = () => {\n    // In a real app, you would save to backend here\n    localStorage.setItem('componentAssignments', JSON.stringify(pageAssignments));\n    alert('Assignments saved successfully!');\n    navigate('/');\n  };\n  useEffect(() => {\n    // Load saved assignments if they exist\n    const savedAssignments = localStorage.getItem('componentAssignments');\n    if (savedAssignments) {\n      setPageAssignments(JSON.parse(savedAssignments));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Component Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Assign components to pages (each page must have at least one component)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assignment-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell\",\n          children: \"Component\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), pages.map(page => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell\",\n          children: page.toUpperCase()\n        }, page, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), components.map(component => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assignment-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"component-cell\",\n          children: component\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), pages.map(page => {\n          var _pageAssignments$page, _pageAssignments$page2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-cell\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: (_pageAssignments$page = pageAssignments[page]) === null || _pageAssignments$page === void 0 ? void 0 : _pageAssignments$page.includes(component),\n              onChange: e => handleAssignmentChange(page, component, e.target.checked),\n              disabled: ((_pageAssignments$page2 = pageAssignments[page]) === null || _pageAssignments$page2 === void 0 ? void 0 : _pageAssignments$page2.includes(component)) && pageAssignments[page].length === 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, `${page}-${component}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this);\n        })]\n      }, component, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      className: \"save-button\",\n      children: \"Save Assignments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Admin, \"KoDaersQewdsP9DsuKSl43S7Qhw=\", false, function () {\n  return [useNavigate];\n});\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Admin","_s","navigate","pageAssignments","setPageAssignments","page1","page2","components","pages","handleAssignmentChange","page","component","isChecked","prev","newAssignments","filter","c","length","availableComponent","find","includes","push","handleSave","localStorage","setItem","JSON","stringify","alert","savedAssignments","getItem","parse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","toUpperCase","_pageAssignments$page","_pageAssignments$page2","type","checked","onChange","e","target","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/roy/Desktop/Zealthy/onboarding/src/Components/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Admin.css';\n\nconst Admin = () => {\n  const navigate = useNavigate();\n  const [pageAssignments, setPageAssignments] = useState({\n    page1: ['AboutMe', 'Address'],\n    page2: ['BirthDate']\n  });\n\n  const components = ['AboutMe', 'Address', 'BirthDate'];\n  const pages = ['page1', 'page2'];\n\n  const handleAssignmentChange = (page, component, isChecked) => {\n    setPageAssignments(prev => {\n      const newAssignments = { ...prev };\n      if (isChecked) {\n        // Add component to page\n        newAssignments[page] = [...(newAssignments[page] || []), component];\n      } else {\n        // Remove component from page\n        newAssignments[page] = newAssignments[page].filter(c => c !== component);\n        // Ensure at least one component remains\n        if (newAssignments[page].length === 0) {\n          // Find first available component not already assigned to this page\n          const availableComponent = components.find(c => !newAssignments[page].includes(c));\n          if (availableComponent) {\n            newAssignments[page].push(availableComponent);\n          }\n        }\n      }\n      return newAssignments;\n    });\n  };\n\n  const handleSave = () => {\n    // In a real app, you would save to backend here\n    localStorage.setItem('componentAssignments', JSON.stringify(pageAssignments));\n    alert('Assignments saved successfully!');\n    navigate('/');\n  };\n\n  useEffect(() => {\n    // Load saved assignments if they exist\n    const savedAssignments = localStorage.getItem('componentAssignments');\n    if (savedAssignments) {\n      setPageAssignments(JSON.parse(savedAssignments));\n    }\n  }, []);\n\n  return (\n    <div className=\"admin-container\">\n      <h1>Component Management</h1>\n      <p>Assign components to pages (each page must have at least one component)</p>\n      \n      <div className=\"assignment-grid\">\n        <div className=\"header-row\">\n          <div className=\"header-cell\">Component</div>\n          {pages.map(page => (\n            <div key={page} className=\"header-cell\">{page.toUpperCase()}</div>\n          ))}\n        </div>\n        \n        {components.map(component => (\n          <div key={component} className=\"assignment-row\">\n            <div className=\"component-cell\">{component}</div>\n            {pages.map(page => (\n              <div key={`${page}-${component}`} className=\"checkbox-cell\">\n                <input\n                  type=\"checkbox\"\n                  checked={pageAssignments[page]?.includes(component)}\n                  onChange={(e) => handleAssignmentChange(page, component, e.target.checked)}\n                  disabled={\n                    pageAssignments[page]?.includes(component) && \n                    pageAssignments[page].length === 1\n                  }\n                />\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n      \n      <button onClick={handleSave} className=\"save-button\">\n        Save Assignments\n      </button>\n    </div>\n  );\n};\n\nexport default Admin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}